// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Infrastructure.Persistence;

#nullable disable

namespace backend.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230526134542_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.2.22472.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ObjectIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("Email");

                    b.HasIndex("ObjectIdentifier");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("backend.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManagerEmails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1285),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1285),
                            ManagerEmails = "anton.louf@student.ehb.be",
                            Name = ".net"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1289),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1289),
                            ManagerEmails = "anton.louf@student.ehb.be",
                            Name = "Java"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1291),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1291),
                            ManagerEmails = "anton.louf@student.ehb.be",
                            Name = "Low Code"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("CurrentCountOfStudents")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("MaxStudents")
                        .HasColumnType("tinyint");

                    b.Property<int>("RequiredTrainingType")
                        .HasColumnType("int");

                    b.Property<string>("SchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolYear");

                    b.HasIndex("UnitId");

                    b.ToTable("InternShips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1421),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1421),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2023-2024",
                            UnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2087),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2087),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2022-2023",
                            UnitId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2159),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2159),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2023-2024",
                            UnitId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2207),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2207),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2239),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2239),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2023-2024",
                            UnitId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2277),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2277),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2023-2024",
                            UnitId = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2407),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2406),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2022-2023",
                            UnitId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2437),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2436),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2022-2023",
                            UnitId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2474),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2474),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2023-2024",
                            UnitId = 3
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2520),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2519),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 1
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipContentTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("InternShipId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KnowledgeToDevelop")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeededKnowledge")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TitleContent")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("InternShipId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Translations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2002),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 1,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2002),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 2,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2112),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 2,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2111),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 3,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2120),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 2,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2119),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 4,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2180),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 3,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2180),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 5,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2188),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 3,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2188),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 6,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2196),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 3,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2195),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 7,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2228),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 4,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2228),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 8,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2257),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 5,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2257),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 9,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2264),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 5,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2264),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 10,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2350),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 6,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2350),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 11,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2387),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 6,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2387),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 12,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2395),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 6,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2395),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 13,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2426),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 7,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2425),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 14,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2455),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 8,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2455),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 15,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2463),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 8,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2463),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 16,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2493),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 9,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2493),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 17,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2500),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 9,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2500),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 18,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2508),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 9,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2507),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 19,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2567),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 10,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2567),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipLocation", b =>
                {
                    b.Property<int>("InternShipId")
                        .HasColumnType("int");

                    b.Property<int>("LocationsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InternShipId", "LocationsId");

                    b.HasIndex("LocationsId");

                    b.ToTable("InternShipLocation");

                    b.HasData(
                        new
                        {
                            InternShipId = 1,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1423),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1423)
                        },
                        new
                        {
                            InternShipId = 1,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1810),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1809)
                        },
                        new
                        {
                            InternShipId = 1,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1816),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1816)
                        },
                        new
                        {
                            InternShipId = 2,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2088),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2087)
                        },
                        new
                        {
                            InternShipId = 2,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2095),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2094)
                        },
                        new
                        {
                            InternShipId = 2,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2104),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2103)
                        },
                        new
                        {
                            InternShipId = 3,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2160),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2159)
                        },
                        new
                        {
                            InternShipId = 3,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2166),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2166)
                        },
                        new
                        {
                            InternShipId = 3,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2172),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2172)
                        },
                        new
                        {
                            InternShipId = 4,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2208),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2208)
                        },
                        new
                        {
                            InternShipId = 4,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2216),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2216)
                        },
                        new
                        {
                            InternShipId = 4,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2222),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2221)
                        },
                        new
                        {
                            InternShipId = 5,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2240),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2239)
                        },
                        new
                        {
                            InternShipId = 5,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2245),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2245)
                        },
                        new
                        {
                            InternShipId = 5,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2250),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2250)
                        },
                        new
                        {
                            InternShipId = 6,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2278),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2278)
                        },
                        new
                        {
                            InternShipId = 6,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2337),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2336)
                        },
                        new
                        {
                            InternShipId = 6,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2343),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2343)
                        },
                        new
                        {
                            InternShipId = 7,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2407),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2407)
                        },
                        new
                        {
                            InternShipId = 7,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2413),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2412)
                        },
                        new
                        {
                            InternShipId = 7,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2418),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2418)
                        },
                        new
                        {
                            InternShipId = 8,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2437),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2437)
                        },
                        new
                        {
                            InternShipId = 8,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2443),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2443)
                        },
                        new
                        {
                            InternShipId = 8,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2449),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2449)
                        },
                        new
                        {
                            InternShipId = 9,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2475),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2475)
                        },
                        new
                        {
                            InternShipId = 9,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2480),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2480)
                        },
                        new
                        {
                            InternShipId = 9,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2486),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2486)
                        },
                        new
                        {
                            InternShipId = 10,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2520),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2520)
                        },
                        new
                        {
                            InternShipId = 10,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2553),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2553)
                        },
                        new
                        {
                            InternShipId = 10,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2560),
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2560)
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Code = "en",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1276),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1276),
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            Code = "fr",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1275),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1275),
                            Name = "French"
                        },
                        new
                        {
                            Id = 1,
                            Code = "nl",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1273),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1273),
                            Name = "Dutch"
                        },
                        new
                        {
                            Id = 4,
                            Code = "de",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1277),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1277),
                            Name = "German"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Huizingen",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1268),
                            HouseNumber = 42,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1265),
                            StreetName = "Vaucampslaan",
                            ZipCode = "1654"
                        },
                        new
                        {
                            Id = 2,
                            City = "Gent",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1271),
                            HouseNumber = 4,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1270),
                            StreetName = "Gaston Crommenlaan",
                            ZipCode = "9050"
                        },
                        new
                        {
                            Id = 3,
                            City = "Kontich",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1271),
                            HouseNumber = 26,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(1271),
                            StreetName = "Prins Boudewijnlaan",
                            ZipCode = "2550"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.PrefaceTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("UnitId");

                    b.ToTable("PrefaceTranslations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "<p>Dit is een standaard descriptie horende bij een unit</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2590),
                            IsDeleted = false,
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2590),
                            UnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "<p>Ce ici c'est un description standard d un departement</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2601),
                            IsDeleted = false,
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2601),
                            UnitId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "<p>This is a standard description for a unit</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2607),
                            IsDeleted = false,
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2606),
                            UnitId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "<p>Dit is een standaard descriptie horende bij een unit</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2612),
                            IsDeleted = false,
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2612),
                            UnitId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "<p>Ce ici c'est un description standard d un departement</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2618),
                            IsDeleted = false,
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2618),
                            UnitId = 2
                        },
                        new
                        {
                            Id = 6,
                            Content = "<p>This is a standard description for a unit</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2624),
                            IsDeleted = false,
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2624),
                            UnitId = 2
                        },
                        new
                        {
                            Id = 7,
                            Content = "<p>Dit is een standaard descriptie horende bij een unit</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2630),
                            IsDeleted = false,
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2629),
                            UnitId = 3
                        },
                        new
                        {
                            Id = 8,
                            Content = "<p>Ce ici c'est un description standard d un departement</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2635),
                            IsDeleted = false,
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2635),
                            UnitId = 3
                        },
                        new
                        {
                            Id = 9,
                            Content = "<p>This is a standard description for a unit</p>",
                            CreatedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2640),
                            IsDeleted = false,
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 26, 13, 45, 42, 593, DateTimeKind.Utc).AddTicks(2640),
                            UnitId = 3
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShip", b =>
                {
                    b.HasOne("backend.Domain.Entities.Department", "Unit")
                        .WithMany("Internships")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipContentTranslation", b =>
                {
                    b.HasOne("backend.Domain.Entities.InternShip", "InternShip")
                        .WithMany("Translations")
                        .HasForeignKey("InternShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Domain.Entities.Language", "Language")
                        .WithMany("InternshipTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternShip");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipLocation", b =>
                {
                    b.HasOne("backend.Domain.Entities.InternShip", null)
                        .WithMany("InternShipLocations")
                        .HasForeignKey("InternShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Domain.Entities.Location", null)
                        .WithMany()
                        .HasForeignKey("LocationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("backend.Domain.Entities.PrefaceTranslation", b =>
                {
                    b.HasOne("backend.Domain.Entities.Language", "Language")
                        .WithMany("PrefaceTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Domain.Entities.Department", "Unit")
                        .WithMany("PrefaceTranslations")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("backend.Domain.Entities.Department", b =>
                {
                    b.Navigation("Internships");

                    b.Navigation("PrefaceTranslations");
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShip", b =>
                {
                    b.Navigation("InternShipLocations");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("backend.Domain.Entities.Language", b =>
                {
                    b.Navigation("InternshipTranslations");

                    b.Navigation("PrefaceTranslations");
                });
#pragma warning restore 612, 618
        }
    }
}
