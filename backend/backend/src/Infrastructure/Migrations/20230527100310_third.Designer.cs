// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Infrastructure.Persistence;

#nullable disable

namespace backend.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230527100310_third")]
    partial class third
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.2.22472.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Email");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("backend.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManagerEmails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(22),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(22),
                            ManagerEmails = "anton.louf@student.ehb.be",
                            Name = ".net"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(25),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(25),
                            ManagerEmails = "anton.louf@student.ehb.be",
                            Name = "Java"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(26),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(26),
                            ManagerEmails = "anton.louf@student.ehb.be",
                            Name = "Low Code"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("CurrentCountOfStudents")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("MaxStudents")
                        .HasColumnType("tinyint");

                    b.Property<int>("RequiredTrainingType")
                        .HasColumnType("int");

                    b.Property<string>("SchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolYear");

                    b.HasIndex("UnitId");

                    b.ToTable("InternShips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(130),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(129),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2023-2024",
                            UnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(315),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(315),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(387),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(387),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(435),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(435),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2023-2024",
                            UnitId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(466),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(466),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2022-2023",
                            UnitId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(505),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(505),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(636),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(636),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(665),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(665),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(701),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(701),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 3
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(769),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(769),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 1
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipContentTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("InternShipId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KnowledgeToDevelop")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeededKnowledge")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TitleContent")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("InternShipId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Translations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(282),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 1,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(281),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 2,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(364),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 2,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(364),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 3,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(374),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 2,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(374),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 4,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(408),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 3,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(407),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 5,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(415),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 3,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(415),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 6,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(423),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 3,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(423),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 7,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(455),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 4,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(454),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 8,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(485),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 5,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(485),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 9,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(492),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 5,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(492),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 10,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(608),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 6,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(608),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 11,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(616),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 6,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(616),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 12,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(624),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 6,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(624),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 13,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(655),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 7,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(655),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 14,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(683),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 8,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(683),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 15,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(690),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 8,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(690),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 16,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(718),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 9,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(718),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 17,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(726),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 9,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(725),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 18,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(756),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 9,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(755),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 19,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(788),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 10,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(788),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipLocation", b =>
                {
                    b.Property<int>("InternShipId")
                        .HasColumnType("int");

                    b.Property<int>("LocationsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InternShipId", "LocationsId");

                    b.HasIndex("LocationsId");

                    b.ToTable("InternShipLocation");

                    b.HasData(
                        new
                        {
                            InternShipId = 1,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(133),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(133)
                        },
                        new
                        {
                            InternShipId = 1,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(147),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(147)
                        },
                        new
                        {
                            InternShipId = 1,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(153),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(153)
                        },
                        new
                        {
                            InternShipId = 2,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(316),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(315)
                        },
                        new
                        {
                            InternShipId = 2,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(322),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(322)
                        },
                        new
                        {
                            InternShipId = 2,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(355),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(355)
                        },
                        new
                        {
                            InternShipId = 3,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(388),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(387)
                        },
                        new
                        {
                            InternShipId = 3,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(394),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(394)
                        },
                        new
                        {
                            InternShipId = 3,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(400),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(399)
                        },
                        new
                        {
                            InternShipId = 4,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(436),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(436)
                        },
                        new
                        {
                            InternShipId = 4,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(442),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(442)
                        },
                        new
                        {
                            InternShipId = 4,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(448),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(447)
                        },
                        new
                        {
                            InternShipId = 5,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(467),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(467)
                        },
                        new
                        {
                            InternShipId = 5,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(472),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(472)
                        },
                        new
                        {
                            InternShipId = 5,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(478),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(478)
                        },
                        new
                        {
                            InternShipId = 6,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(586),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(585)
                        },
                        new
                        {
                            InternShipId = 6,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(593),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(593)
                        },
                        new
                        {
                            InternShipId = 6,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(600),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(600)
                        },
                        new
                        {
                            InternShipId = 7,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(637),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(636)
                        },
                        new
                        {
                            InternShipId = 7,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(643),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(642)
                        },
                        new
                        {
                            InternShipId = 7,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(648),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(648)
                        },
                        new
                        {
                            InternShipId = 8,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(666),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(666)
                        },
                        new
                        {
                            InternShipId = 8,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(671),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(671)
                        },
                        new
                        {
                            InternShipId = 8,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(677),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(676)
                        },
                        new
                        {
                            InternShipId = 9,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(701),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(701)
                        },
                        new
                        {
                            InternShipId = 9,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(707),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(706)
                        },
                        new
                        {
                            InternShipId = 9,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(712),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(712)
                        },
                        new
                        {
                            InternShipId = 10,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(770),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(770)
                        },
                        new
                        {
                            InternShipId = 10,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(776),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(775)
                        },
                        new
                        {
                            InternShipId = 10,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(781),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(781)
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Code = "en",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(18),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(17),
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            Code = "fr",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(17),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(17),
                            Name = "French"
                        },
                        new
                        {
                            Id = 1,
                            Code = "nl",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(15),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(15),
                            Name = "Dutch"
                        },
                        new
                        {
                            Id = 4,
                            Code = "de",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(18),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(18),
                            Name = "German"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Huizingen",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(11),
                            HouseNumber = 42,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(8),
                            StreetName = "Vaucampslaan",
                            ZipCode = "1654"
                        },
                        new
                        {
                            Id = 2,
                            City = "Gent",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(14),
                            HouseNumber = 4,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(13),
                            StreetName = "Gaston Crommenlaan",
                            ZipCode = "9050"
                        },
                        new
                        {
                            Id = 3,
                            City = "Kontich",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(14),
                            HouseNumber = 26,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(14),
                            StreetName = "Prins Boudewijnlaan",
                            ZipCode = "2550"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.PrefaceTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("UnitId");

                    b.ToTable("PrefaceTranslations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "<p>Dit is een standaard descriptie horende bij een unit</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(811),
                            IsDeleted = false,
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(811),
                            UnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "<p>Ce ici c'est un description standard d un departement</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(822),
                            IsDeleted = false,
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(821),
                            UnitId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "<p>This is a standard description for a unit</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(827),
                            IsDeleted = false,
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(827),
                            UnitId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "<p>Dit is een standaard descriptie horende bij een unit</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(833),
                            IsDeleted = false,
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(832),
                            UnitId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "<p>Ce ici c'est un description standard d un departement</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(838),
                            IsDeleted = false,
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(838),
                            UnitId = 2
                        },
                        new
                        {
                            Id = 6,
                            Content = "<p>This is a standard description for a unit</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(844),
                            IsDeleted = false,
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(844),
                            UnitId = 2
                        },
                        new
                        {
                            Id = 7,
                            Content = "<p>Dit is een standaard descriptie horende bij een unit</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(850),
                            IsDeleted = false,
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(849),
                            UnitId = 3
                        },
                        new
                        {
                            Id = 8,
                            Content = "<p>Ce ici c'est un description standard d un departement</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(855),
                            IsDeleted = false,
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(855),
                            UnitId = 3
                        },
                        new
                        {
                            Id = 9,
                            Content = "<p>This is a standard description for a unit</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(861),
                            IsDeleted = false,
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 3, 9, 871, DateTimeKind.Utc).AddTicks(860),
                            UnitId = 3
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShip", b =>
                {
                    b.HasOne("backend.Domain.Entities.Department", "Unit")
                        .WithMany("Internships")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipContentTranslation", b =>
                {
                    b.HasOne("backend.Domain.Entities.InternShip", "InternShip")
                        .WithMany("Translations")
                        .HasForeignKey("InternShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Domain.Entities.Language", "Language")
                        .WithMany("InternshipTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternShip");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipLocation", b =>
                {
                    b.HasOne("backend.Domain.Entities.InternShip", null)
                        .WithMany("InternShipLocations")
                        .HasForeignKey("InternShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Domain.Entities.Location", null)
                        .WithMany()
                        .HasForeignKey("LocationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("backend.Domain.Entities.PrefaceTranslation", b =>
                {
                    b.HasOne("backend.Domain.Entities.Language", "Language")
                        .WithMany("PrefaceTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Domain.Entities.Department", "Unit")
                        .WithMany("PrefaceTranslations")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("backend.Domain.Entities.Department", b =>
                {
                    b.Navigation("Internships");

                    b.Navigation("PrefaceTranslations");
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShip", b =>
                {
                    b.Navigation("InternShipLocations");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("backend.Domain.Entities.Language", b =>
                {
                    b.Navigation("InternshipTranslations");

                    b.Navigation("PrefaceTranslations");
                });
#pragma warning restore 612, 618
        }
    }
}
