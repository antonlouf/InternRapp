// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Infrastructure.Persistence;

#nullable disable

namespace backend.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230527100449_fourth")]
    partial class fourth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.2.22472.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Email");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("backend.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManagerEmails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7937),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7936),
                            ManagerEmails = "anton.louf@student.ehb.be",
                            Name = ".net"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7939),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7939),
                            ManagerEmails = "anton.louf@student.ehb.be",
                            Name = "Java"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7940),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7940),
                            ManagerEmails = "anton.louf@student.ehb.be",
                            Name = "Low Code"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("CurrentCountOfStudents")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("MaxStudents")
                        .HasColumnType("tinyint");

                    b.Property<int>("RequiredTrainingType")
                        .HasColumnType("int");

                    b.Property<string>("SchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolYear");

                    b.HasIndex("UnitId");

                    b.ToTable("InternShips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8043),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8043),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8214),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8213),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8253),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8253),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8295),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8295),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8322),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8322),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2023-2024",
                            UnitId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8381),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8381),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2022-2023",
                            UnitId = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8422),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8422),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8450),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8450),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2022-2023",
                            UnitId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8506),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8505),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2023-2024",
                            UnitId = 3
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8549),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8549),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2023-2024",
                            UnitId = 1
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipContentTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("InternShipId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KnowledgeToDevelop")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeededKnowledge")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TitleContent")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("InternShipId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Translations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8181),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 1,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8181),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 2,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8235),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 2,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8235),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 3,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8243),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 2,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8242),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 4,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8271),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 3,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8271),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 5,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8278),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 3,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8277),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 6,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8284),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 3,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8284),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 7,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8312),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 4,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8312),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 8,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8362),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 5,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8361),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 9,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8368),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 5,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8368),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 10,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8400),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 6,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8400),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 11,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8407),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 6,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8406),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 12,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8412),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 6,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8412),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 13,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8439),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 7,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8439),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 14,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8466),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 8,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8466),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 15,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8473),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 8,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8473),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 16,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8523),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 9,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8523),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 17,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8530),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 9,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8530),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 18,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8537),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 9,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8537),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 19,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8566),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 10,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8566),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipLocation", b =>
                {
                    b.Property<int>("InternShipId")
                        .HasColumnType("int");

                    b.Property<int>("LocationsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InternShipId", "LocationsId");

                    b.HasIndex("LocationsId");

                    b.ToTable("InternShipLocation");

                    b.HasData(
                        new
                        {
                            InternShipId = 1,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8046),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8046)
                        },
                        new
                        {
                            InternShipId = 1,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8058),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8058)
                        },
                        new
                        {
                            InternShipId = 1,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8064),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8063)
                        },
                        new
                        {
                            InternShipId = 2,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8214),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8214)
                        },
                        new
                        {
                            InternShipId = 2,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8221),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8220)
                        },
                        new
                        {
                            InternShipId = 2,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8228),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8228)
                        },
                        new
                        {
                            InternShipId = 3,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8254),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8254)
                        },
                        new
                        {
                            InternShipId = 3,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8259),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8259)
                        },
                        new
                        {
                            InternShipId = 3,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8264),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8264)
                        },
                        new
                        {
                            InternShipId = 4,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8296),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8296)
                        },
                        new
                        {
                            InternShipId = 4,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8301),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8301)
                        },
                        new
                        {
                            InternShipId = 4,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8306),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8305)
                        },
                        new
                        {
                            InternShipId = 5,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8344),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8343)
                        },
                        new
                        {
                            InternShipId = 5,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8349),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8349)
                        },
                        new
                        {
                            InternShipId = 5,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8355),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8354)
                        },
                        new
                        {
                            InternShipId = 6,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8382),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8381)
                        },
                        new
                        {
                            InternShipId = 6,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8387),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8387)
                        },
                        new
                        {
                            InternShipId = 6,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8394),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8393)
                        },
                        new
                        {
                            InternShipId = 7,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8423),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8423)
                        },
                        new
                        {
                            InternShipId = 7,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8428),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8428)
                        },
                        new
                        {
                            InternShipId = 7,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8433),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8433)
                        },
                        new
                        {
                            InternShipId = 8,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8450),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8450)
                        },
                        new
                        {
                            InternShipId = 8,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8455),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8455)
                        },
                        new
                        {
                            InternShipId = 8,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8460),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8460)
                        },
                        new
                        {
                            InternShipId = 9,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8506),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8506)
                        },
                        new
                        {
                            InternShipId = 9,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8511),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8511)
                        },
                        new
                        {
                            InternShipId = 9,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8516),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8516)
                        },
                        new
                        {
                            InternShipId = 10,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8549),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8549)
                        },
                        new
                        {
                            InternShipId = 10,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8554),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8554)
                        },
                        new
                        {
                            InternShipId = 10,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8559),
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8559)
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Code = "en",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7933),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7932),
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            Code = "fr",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7932),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7932),
                            Name = "French"
                        },
                        new
                        {
                            Id = 1,
                            Code = "nl",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7930),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7930),
                            Name = "Dutch"
                        },
                        new
                        {
                            Id = 4,
                            Code = "de",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7933),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7933),
                            Name = "German"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Huizingen",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7926),
                            HouseNumber = 42,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7923),
                            StreetName = "Vaucampslaan",
                            ZipCode = "1654"
                        },
                        new
                        {
                            Id = 2,
                            City = "Gent",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7929),
                            HouseNumber = 4,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7928),
                            StreetName = "Gaston Crommenlaan",
                            ZipCode = "9050"
                        },
                        new
                        {
                            Id = 3,
                            City = "Kontich",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7929),
                            HouseNumber = 26,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(7929),
                            StreetName = "Prins Boudewijnlaan",
                            ZipCode = "2550"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.PrefaceTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("UnitId");

                    b.ToTable("PrefaceTranslations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "<p>Dit is een standaard descriptie horende bij een unit</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8584),
                            IsDeleted = false,
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8584),
                            UnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "<p>Ce ici c'est un description standard d un departement</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8593),
                            IsDeleted = false,
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8593),
                            UnitId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "<p>This is a standard description for a unit</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8599),
                            IsDeleted = false,
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8599),
                            UnitId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "<p>Dit is een standaard descriptie horende bij een unit</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8604),
                            IsDeleted = false,
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8604),
                            UnitId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "<p>Ce ici c'est un description standard d un departement</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8610),
                            IsDeleted = false,
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8609),
                            UnitId = 2
                        },
                        new
                        {
                            Id = 6,
                            Content = "<p>This is a standard description for a unit</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8615),
                            IsDeleted = false,
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8615),
                            UnitId = 2
                        },
                        new
                        {
                            Id = 7,
                            Content = "<p>Dit is een standaard descriptie horende bij een unit</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8620),
                            IsDeleted = false,
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8620),
                            UnitId = 3
                        },
                        new
                        {
                            Id = 8,
                            Content = "<p>Ce ici c'est un description standard d un departement</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8626),
                            IsDeleted = false,
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8625),
                            UnitId = 3
                        },
                        new
                        {
                            Id = 9,
                            Content = "<p>This is a standard description for a unit</p>",
                            CreatedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8631),
                            IsDeleted = false,
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 27, 10, 4, 49, 491, DateTimeKind.Utc).AddTicks(8630),
                            UnitId = 3
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShip", b =>
                {
                    b.HasOne("backend.Domain.Entities.Department", "Unit")
                        .WithMany("Internships")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipContentTranslation", b =>
                {
                    b.HasOne("backend.Domain.Entities.InternShip", "InternShip")
                        .WithMany("Translations")
                        .HasForeignKey("InternShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Domain.Entities.Language", "Language")
                        .WithMany("InternshipTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternShip");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipLocation", b =>
                {
                    b.HasOne("backend.Domain.Entities.InternShip", null)
                        .WithMany("InternShipLocations")
                        .HasForeignKey("InternShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Domain.Entities.Location", null)
                        .WithMany()
                        .HasForeignKey("LocationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("backend.Domain.Entities.PrefaceTranslation", b =>
                {
                    b.HasOne("backend.Domain.Entities.Language", "Language")
                        .WithMany("PrefaceTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Domain.Entities.Department", "Unit")
                        .WithMany("PrefaceTranslations")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("backend.Domain.Entities.Department", b =>
                {
                    b.Navigation("Internships");

                    b.Navigation("PrefaceTranslations");
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShip", b =>
                {
                    b.Navigation("InternShipLocations");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("backend.Domain.Entities.Language", b =>
                {
                    b.Navigation("InternshipTranslations");

                    b.Navigation("PrefaceTranslations");
                });
#pragma warning restore 612, 618
        }
    }
}
