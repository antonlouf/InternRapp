// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Infrastructure.Persistence;

#nullable disable

namespace backend.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230530110314_last")]
    partial class last
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.2.22472.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Email");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("backend.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManagerEmails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1683),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1683),
                            ManagerEmails = "anton.louf@student.ehb.be",
                            Name = ".net"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1687),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1687),
                            ManagerEmails = "anton.louf@student.ehb.be",
                            Name = "Java"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1688),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1688),
                            ManagerEmails = "anton.louf@student.ehb.be",
                            Name = "Low Code"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<byte>("CurrentCountOfStudents")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("MaxStudents")
                        .HasColumnType("tinyint");

                    b.Property<int>("RequiredTrainingType")
                        .HasColumnType("int");

                    b.Property<string>("SchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SchoolYear");

                    b.HasIndex("UnitId");

                    b.ToTable("InternShips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1849),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1849),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2022-2023",
                            UnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2047),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2046),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2023-2024",
                            UnitId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2087),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2087),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2164),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2163),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2022-2023",
                            UnitId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2194),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2193),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2229),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2229),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2022-2023",
                            UnitId = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2270),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2269),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2023-2024",
                            UnitId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2385),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2385),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2428),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2428),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2021-2022",
                            UnitId = 3
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2508),
                            CurrentCountOfStudents = (byte)0,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2508),
                            MaxStudents = (byte)10,
                            RequiredTrainingType = 0,
                            SchoolYear = "2022-2023",
                            UnitId = 1
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipContentTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("InternShipId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KnowledgeToDevelop")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeededKnowledge")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TitleContent")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("InternShipId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Translations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2019),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 1,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2019),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 2,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2069),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 2,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2069),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 3,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2077),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 2,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2076),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 4,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2105),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 3,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2105),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 5,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2112),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 3,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2112),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 6,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2118),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 3,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2118),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 7,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2183),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 4,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2183),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 8,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2211),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 5,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2210),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 9,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2217),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 5,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2217),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 10,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2248),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 6,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2247),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 11,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2254),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 6,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2254),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 12,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2260),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 6,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2260),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 13,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2287),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 7,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2286),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 14,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2405),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 8,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2405),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 15,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2412),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 8,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2412),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 16,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2460),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 9,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2460),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 17,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2472),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 9,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2472),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 18,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2488),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 9,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2487),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        },
                        new
                        {
                            Id = 19,
                            Comment = "<p>required diploma for this internship is: Bachelor</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2541),
                            Description = "<p>quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>",
                            InternShipId = 10,
                            IsDeleted = false,
                            KnowledgeToDevelop = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2541),
                            NeededKnowledge = "<p>This is a text editor</p><ul><li>With some styling</li><li>And some more styling</li><li>To test if text is converted to HTML</li></ul>",
                            TitleContent = "Standard Internship Title"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipLocation", b =>
                {
                    b.Property<int>("InternShipId")
                        .HasColumnType("int");

                    b.Property<int>("LocationsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InternShipId", "LocationsId");

                    b.HasIndex("LocationsId");

                    b.ToTable("InternShipLocation");

                    b.HasData(
                        new
                        {
                            InternShipId = 1,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1853),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1853)
                        },
                        new
                        {
                            InternShipId = 1,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1874),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1873)
                        },
                        new
                        {
                            InternShipId = 1,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1880),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1880)
                        },
                        new
                        {
                            InternShipId = 2,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2047),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2047)
                        },
                        new
                        {
                            InternShipId = 2,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2054),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2053)
                        },
                        new
                        {
                            InternShipId = 2,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2061),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2061)
                        },
                        new
                        {
                            InternShipId = 3,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2088),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2088)
                        },
                        new
                        {
                            InternShipId = 3,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2093),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2093)
                        },
                        new
                        {
                            InternShipId = 3,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2098),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2098)
                        },
                        new
                        {
                            InternShipId = 4,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2164),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2164)
                        },
                        new
                        {
                            InternShipId = 4,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2170),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2169)
                        },
                        new
                        {
                            InternShipId = 4,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2175),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2175)
                        },
                        new
                        {
                            InternShipId = 5,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2194),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2194)
                        },
                        new
                        {
                            InternShipId = 5,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2199),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2199)
                        },
                        new
                        {
                            InternShipId = 5,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2204),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2204)
                        },
                        new
                        {
                            InternShipId = 6,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2229),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2229)
                        },
                        new
                        {
                            InternShipId = 6,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2235),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2234)
                        },
                        new
                        {
                            InternShipId = 6,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2241),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2241)
                        },
                        new
                        {
                            InternShipId = 7,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2270),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2270)
                        },
                        new
                        {
                            InternShipId = 7,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2275),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2275)
                        },
                        new
                        {
                            InternShipId = 7,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2281),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2280)
                        },
                        new
                        {
                            InternShipId = 8,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2386),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2386)
                        },
                        new
                        {
                            InternShipId = 8,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2392),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2392)
                        },
                        new
                        {
                            InternShipId = 8,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2398),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2397)
                        },
                        new
                        {
                            InternShipId = 9,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2429),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2428)
                        },
                        new
                        {
                            InternShipId = 9,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2438),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2438)
                        },
                        new
                        {
                            InternShipId = 9,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2449),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2448)
                        },
                        new
                        {
                            InternShipId = 10,
                            LocationsId = 1,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2509),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2508)
                        },
                        new
                        {
                            InternShipId = 10,
                            LocationsId = 2,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2518),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2517)
                        },
                        new
                        {
                            InternShipId = 10,
                            LocationsId = 3,
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2528),
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2528)
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorId");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Code = "en",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1639),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1639),
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            Code = "fr",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1637),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1637),
                            Name = "French"
                        },
                        new
                        {
                            Id = 1,
                            Code = "nl",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1635),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1635),
                            Name = "Dutch"
                        },
                        new
                        {
                            Id = 4,
                            Code = "de",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1679),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1679),
                            Name = "German"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Huizingen",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1631),
                            HouseNumber = 42,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1624),
                            StreetName = "Vaucampslaan",
                            ZipCode = "1654"
                        },
                        new
                        {
                            Id = 2,
                            City = "Gent",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1634),
                            HouseNumber = 4,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1634),
                            StreetName = "Gaston Crommenlaan",
                            ZipCode = "9050"
                        },
                        new
                        {
                            Id = 3,
                            City = "Kontich",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1635),
                            HouseNumber = 26,
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(1634),
                            StreetName = "Prins Boudewijnlaan",
                            ZipCode = "2550"
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.PrefaceTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("UnitId");

                    b.ToTable("PrefaceTranslations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "<p>Dit is een standaard descriptie horende bij een unit</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2574),
                            IsDeleted = false,
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2574),
                            UnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "<p>Ce ici c'est un description standard d un departement</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2590),
                            IsDeleted = false,
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2590),
                            UnitId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "<p>This is a standard description for a unit</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2600),
                            IsDeleted = false,
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2599),
                            UnitId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "<p>Dit is een standaard descriptie horende bij een unit</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2648),
                            IsDeleted = false,
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2648),
                            UnitId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "<p>Ce ici c'est un description standard d un departement</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2658),
                            IsDeleted = false,
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2658),
                            UnitId = 2
                        },
                        new
                        {
                            Id = 6,
                            Content = "<p>This is a standard description for a unit</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2668),
                            IsDeleted = false,
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2668),
                            UnitId = 2
                        },
                        new
                        {
                            Id = 7,
                            Content = "<p>Dit is een standaard descriptie horende bij een unit</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2678),
                            IsDeleted = false,
                            LanguageId = 1,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2677),
                            UnitId = 3
                        },
                        new
                        {
                            Id = 8,
                            Content = "<p>Ce ici c'est un description standard d un departement</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2687),
                            IsDeleted = false,
                            LanguageId = 2,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2687),
                            UnitId = 3
                        },
                        new
                        {
                            Id = 9,
                            Content = "<p>This is a standard description for a unit</p>",
                            CreatedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2697),
                            IsDeleted = false,
                            LanguageId = 3,
                            LastModifiedDate = new DateTime(2023, 5, 30, 11, 3, 14, 72, DateTimeKind.Utc).AddTicks(2696),
                            UnitId = 3
                        });
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShip", b =>
                {
                    b.HasOne("backend.Domain.Entities.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("backend.Domain.Entities.Department", "Unit")
                        .WithMany("Internships")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipContentTranslation", b =>
                {
                    b.HasOne("backend.Domain.Entities.InternShip", "InternShip")
                        .WithMany("Translations")
                        .HasForeignKey("InternShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Domain.Entities.Language", "Language")
                        .WithMany("InternshipTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternShip");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShipLocation", b =>
                {
                    b.HasOne("backend.Domain.Entities.InternShip", null)
                        .WithMany("InternShipLocations")
                        .HasForeignKey("InternShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Domain.Entities.Location", null)
                        .WithMany()
                        .HasForeignKey("LocationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("backend.Domain.Entities.Language", b =>
                {
                    b.HasOne("backend.Domain.Entities.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("backend.Domain.Entities.Location", b =>
                {
                    b.HasOne("backend.Domain.Entities.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("backend.Domain.Entities.PrefaceTranslation", b =>
                {
                    b.HasOne("backend.Domain.Entities.Language", "Language")
                        .WithMany("PrefaceTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Domain.Entities.Department", "Unit")
                        .WithMany("PrefaceTranslations")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("backend.Domain.Entities.Department", b =>
                {
                    b.Navigation("Internships");

                    b.Navigation("PrefaceTranslations");
                });

            modelBuilder.Entity("backend.Domain.Entities.InternShip", b =>
                {
                    b.Navigation("InternShipLocations");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("backend.Domain.Entities.Language", b =>
                {
                    b.Navigation("InternshipTranslations");

                    b.Navigation("PrefaceTranslations");
                });
#pragma warning restore 612, 618
        }
    }
}
